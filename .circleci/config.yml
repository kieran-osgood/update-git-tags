version: 2.1

orbs:
  go: circleci/go@1.7.0

jobs:
  checkout_and_cache:
    docker:
      - image: cimg/go:1.17.3
    steps:
      - checkout
      - go/load-cache
      - go/mod-download
      - go/save-cache
      - persist_to_workspace:
          root: .
          paths: 
            - .

  test:
    docker:
      - image: cimg/go:1.17.3
    environment: # environment variables for the build itself
      TEST_RESULTS: /tmp/test-results # path to where test results will be saved
    steps:
      - attach_workspace: 
          at: .
      - run: mkdir -p $TEST_RESULTS # create the test results directory
      - run:  
          name: Install go-junit-report
          command: go install github.com/jstemmer/go-junit-report/v2@v2.0.0
      - run: 
          name: Run Tests
          command: go test -v 2>&1 ./... | go-junit-report -set-exit-code > ${TEST_RESULTS}/report.xml
      - store_artifacts: # upload test summary for display in Artifacts
          path: /tmp/test-results
          destination: raw-test-output
      - store_test_results: # upload test results for display in Test Summary
          path: /tmp/test-results

  build:
    docker:
      - image: cimg/go:1.17.3
    steps:
      - attach_workspace: 
          at: .
      - run:
          command: |
            VERSION=$(cat version.txt) 
            go build \
                -ldflags "-X main.version=${VERSION} -X 'main.build=${CIRCLE_BUILD_NUM}'" \
                -o ./bin/update-git-tags \
              ./cmd
      - persist_to_workspace:
          root: .
          paths:
            - .
      - store_artifacts:
          path: ./bin/update-git-tags
          destination: update-git-tags

  release:
    docker:
      - image: cibuilds/github:0.10
    steps:
      - attach_workspace:
          at: .
      - run: echo $DOCKERHUB_USERNAME
      - run:
          name: "Publish Release on GitHub"
          command: |
            VERSION=$(cat version.txt)
            ghr \
                -t "${GITHUB_TOKEN}" \
                -u "${CIRCLE_PROJECT_USERNAME}" \
                -r "${CIRCLE_PROJECT_REPONAME}" \
                -c "${CIRCLE_SHA1}" \
                -delete \
              "${VERSION}" \
              ./bin
      - run:
          name: "Dockerize app for orb"
          command: |
            make docker-executor version=$(cat version.txt)
            make docker-push

workflows:
  build_test_release:
    jobs:
      - checkout_and_cache:
          filters:
            branches:
              only: main
      - test:
          requires:
            - checkout_and_cache
      - build:
          requires:
            - test
      - release:
          context: orb-publishing
          requires:
              - build
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /(?<=^[Vv]|^)(?:(?<major>(?:0|[1-9](?:(?:0|[1-9])+)*))[.](?<minor>(?:0|[1-9](?:(?:0|[1-9])+)*))[.](?<patch>(?:0|[1-9](?:(?:0|[1-9])+)*))(?:-(?<prerelease>(?:(?:(?:[A-Za-z]|-)(?:(?:(?:0|[1-9])|(?:[A-Za-z]|-))+)?|(?:(?:(?:0|[1-9])|(?:[A-Za-z]|-))+)(?:[A-Za-z]|-)(?:(?:(?:0|[1-9])|(?:[A-Za-z]|-))+)?)|(?:0|[1-9](?:(?:0|[1-9])+)*))(?:[.](?:(?:(?:[A-Za-z]|-)(?:(?:(?:0|[1-9])|(?:[A-Za-z]|-))+)?|(?:(?:(?:0|[1-9])|(?:[A-Za-z]|-))+)(?:[A-Za-z]|-)(?:(?:(?:0|[1-9])|(?:[A-Za-z]|-))+)?)|(?:0|[1-9](?:(?:0|[1-9])+)*)))*))?(?:[+](?<build>(?:(?:(?:[A-Za-z]|-)(?:(?:(?:0|[1-9])|(?:[A-Za-z]|-))+)?|(?:(?:(?:0|[1-9])|(?:[A-Za-z]|-))+)(?:[A-Za-z]|-)(?:(?:(?:0|[1-9])|(?:[A-Za-z]|-))+)?)|(?:(?:0|[1-9])+))(?:[.](?:(?:(?:[A-Za-z]|-)(?:(?:(?:0|[1-9])|(?:[A-Za-z]|-))+)?|(?:(?:(?:0|[1-9])|(?:[A-Za-z]|-))+)(?:[A-Za-z]|-)(?:(?:(?:0|[1-9])|(?:[A-Za-z]|-))+)?)|(?:(?:0|[1-9])+)))*))?)$/
